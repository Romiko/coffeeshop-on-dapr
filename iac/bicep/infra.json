{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "1.10-experimental",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_EXPERIMENTAL_WARNING": "Symbolic name support in ARM is experimental, and should be enabled for testing purposes only. Do not enable this setting for any production usage, or you may be unexpectedly broken at any time!",
    "_generator": {
      "name": "bicep",
      "version": "0.15.31.15270",
      "templateHash": "13144867745931115627"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "mode": {
      "type": "string",
      "defaultValue": "cloud",
      "allowedValues": [
        "cloud",
        "dev"
      ],
      "metadata": {
        "description": "Which mode to deploy the infrastructure. Defaults to cloud, which deploys everything. The mode dev only deploys the resources needed for local development."
      }
    }
  },
  "resources": {
    "registry": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "registry",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "1.10-experimental",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_EXPERIMENTAL_WARNING": "Symbolic name support in ARM is experimental, and should be enabled for testing purposes only. Do not enable this setting for any production usage, or you may be unexpectedly broken at any time!",
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "12839433927313405417"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Azure region to deploy resources into. Defaults to location of target resource group"
              }
            },
            "registryName": {
              "type": "string",
              "defaultValue": "[format('coffeeshop{0}', uniqueString(resourceGroup().id))]",
              "metadata": {
                "description": "Name of the container registry. Defaults to unique hashed ID prefixed with \"coffeeshop\""
              }
            }
          },
          "resources": {
            "acr": {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2022-02-01-preview",
              "name": "[parameters('registryName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "anonymousPullEnabled": true
              }
            }
          },
          "outputs": {
            "registryId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registryName'))]"
            }
          }
        }
      }
    },
    "servicebus": {
      "condition": "[equals(parameters('mode'), 'cloud')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "servicebus",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "1.10-experimental",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_EXPERIMENTAL_WARNING": "Symbolic name support in ARM is experimental, and should be enabled for testing purposes only. Do not enable this setting for any production usage, or you may be unexpectedly broken at any time!",
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "4392579261472659775"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Azure region to deploy resources into. Defaults to location of target resource group"
              }
            },
            "namespaceName": {
              "type": "string",
              "defaultValue": "[format('coffeeshop-{0}', uniqueString(resourceGroup().id))]",
              "metadata": {
                "description": "Name of the service bus namespace."
              }
            }
          },
          "resources": {
            "namespace::keda": {
              "type": "Microsoft.ServiceBus/namespaces/AuthorizationRules",
              "apiVersion": "2022-01-01-preview",
              "name": "[format('{0}/{1}', parameters('namespaceName'), 'KEDA')]",
              "properties": {
                "rights": [
                  "Manage",
                  "Listen",
                  "Send"
                ]
              },
              "dependsOn": [
                "namespace"
              ]
            },
            "namespace::dapr": {
              "type": "Microsoft.ServiceBus/namespaces/AuthorizationRules",
              "apiVersion": "2022-01-01-preview",
              "name": "[format('{0}/{1}', parameters('namespaceName'), 'Dapr')]",
              "properties": {
                "rights": [
                  "Manage",
                  "Listen",
                  "Send"
                ]
              },
              "dependsOn": [
                "namespace"
              ]
            },
            "namespace": {
              "type": "Microsoft.ServiceBus/namespaces",
              "apiVersion": "2022-01-01-preview",
              "name": "[parameters('namespaceName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Standard"
              },
              "properties": {
                "minimumTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled"
              }
            }
          },
          "outputs": {
            "serviceBusId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaceName'))]"
            },
            "serviceBusAuthRuleName": {
              "type": "string",
              "value": "KEDA"
            },
            "daprAuthRuleName": {
              "type": "string",
              "value": "Dapr"
            }
          }
        }
      }
    },
    "aks": {
      "condition": "[equals(parameters('mode'), 'cloud')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "aks",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "1.10-experimental",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_EXPERIMENTAL_WARNING": "Symbolic name support in ARM is experimental, and should be enabled for testing purposes only. Do not enable this setting for any production usage, or you may be unexpectedly broken at any time!",
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "13159175868924264791"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Azure region to deploy resources into. Defaults to location of target resource group"
              }
            },
            "clusterName": {
              "type": "string",
              "defaultValue": "coffeeshop",
              "metadata": {
                "description": "Name of the AKS cluster. Defaults to a unique hash prefixed with \"coffeeshop-\""
              }
            },
            "agentVMSize": {
              "type": "string",
              "defaultValue": "standard_d2s_v3",
              "metadata": {
                "description": "The size of the Virtual Machine."
              }
            },
            "agentCount": {
              "type": "int",
              "defaultValue": 3,
              "maxValue": 50,
              "minValue": 1,
              "metadata": {
                "description": "The number of nodes for the cluster."
              }
            }
          },
          "resources": {
            "aksCluster": {
              "type": "Microsoft.ContainerService/managedClusters",
              "apiVersion": "2022-05-02-preview",
              "name": "[parameters('clusterName')]",
              "location": "[parameters('location')]",
              "properties": {
                "agentPoolProfiles": [
                  {
                    "name": "agentpool",
                    "osDiskSizeGB": 0,
                    "count": "[parameters('agentCount')]",
                    "vmSize": "[parameters('agentVMSize')]",
                    "osType": "Linux",
                    "mode": "System"
                  }
                ],
                "dnsPrefix": "[format('{0}-dns', parameters('clusterName'))]",
                "enableRBAC": true,
                "addonProfiles": {
                  "httpApplicationRouting": {
                    "enabled": true
                  }
                }
              },
              "identity": {
                "type": "SystemAssigned"
              }
            }
          },
          "outputs": {
            "aksCluster": {
              "type": "string",
              "value": "[parameters('clusterName')]"
            }
          }
        }
      }
    }
  }
}